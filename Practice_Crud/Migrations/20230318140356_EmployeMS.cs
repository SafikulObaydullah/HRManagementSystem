using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace HRM_API.Migrations
{
    /// <inheritdoc />
    public partial class EmployeMS : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Accounts",
                columns: table => new
                {
                    IntAccountId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrAccountName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrShortCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrOwnerName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrAddress = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrMobileNumber = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrNid = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrBin = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrEmail = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrWebsite = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntCountryId = table.Column<long>(type: "bigint", nullable: false),
                    IntOwnerEmployeeId = table.Column<long>(type: "bigint", nullable: true),
                    StrCurrency = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsInternCloseMenual = table.Column<bool>(type: "bit", nullable: true),
                    IsProbationaryCloseMenual = table.Column<bool>(type: "bit", nullable: true),
                    IsEmployeeCodeAutoGenerated = table.Column<bool>(type: "bit", nullable: true),
                    IsBlock = table.Column<bool>(type: "bit", nullable: true),
                    IsTax = table.Column<bool>(type: "bit", nullable: true),
                    IsProvidentFund = table.Column<bool>(type: "bit", nullable: true),
                    IsLoan = table.Column<bool>(type: "bit", nullable: true),
                    IsActive = table.Column<bool>(type: "bit", nullable: true),
                    DteExpireDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IntMinEmployee = table.Column<long>(type: "bigint", nullable: true),
                    IntMaxEmployee = table.Column<long>(type: "bigint", nullable: true),
                    NumPrice = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    NumPackageFileStorageQuaota = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    IsFree = table.Column<bool>(type: "bit", nullable: true),
                    IsLoggedInWithOtp = table.Column<bool>(type: "bit", nullable: true),
                    DteDateOfOnboard = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NumFileStorageQuaota = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    DteCreatedAt = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IntCreatedBy = table.Column<long>(type: "bigint", nullable: true),
                    DteUpdatedAt = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IntUpdatedBy = table.Column<long>(type: "bigint", nullable: true),
                    IsOvertimeAutoCalculated = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Accounts", x => x.IntAccountId);
                });

            migrationBuilder.CreateTable(
                name: "BloodGroup",
                columns: table => new
                {
                    IntBloodGroupId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrBloodGroupName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BloodGroup", x => x.IntBloodGroupId);
                });

            migrationBuilder.CreateTable(
                name: "BusinessUnit",
                columns: table => new
                {
                    IntBusinessUnitId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrBusinessUnitCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrBusinessUnitName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrBusinessUnitAddress = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true),
                    IsAttendanceDataProceed = table.Column<bool>(type: "bit", nullable: true),
                    StrImage = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrRegistrationNo = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DteRegistrationDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StrMasking = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrBusinessUnitGroupName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IsVatExempted = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BusinessUnit", x => x.IntBusinessUnitId);
                });

            migrationBuilder.CreateTable(
                name: "Country",
                columns: table => new
                {
                    IntCountryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrCountryCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrDialingCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrCountryName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Country", x => x.IntCountryId);
                });

            migrationBuilder.CreateTable(
                name: "Division",
                columns: table => new
                {
                    IntDivisionId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrDivisionGeocode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrDivision = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntCountryId = table.Column<long>(type: "bigint", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Division", x => x.IntDivisionId);
                });

            migrationBuilder.CreateTable(
                name: "EducationDegree",
                columns: table => new
                {
                    IntEducationDegreeId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrEducationDegree = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntLevelOfEducationId = table.Column<long>(type: "bigint", nullable: false),
                    StrLevelOfEducation = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EducationDegree", x => x.IntEducationDegreeId);
                });

            migrationBuilder.CreateTable(
                name: "EmployeeBasiceInfo",
                columns: table => new
                {
                    Id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Address = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EmployeeBasiceInfo", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "EmployeeDepartment",
                columns: table => new
                {
                    IntDepartmentId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrDepartmentCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrDepartmentName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntAccountId = table.Column<long>(type: "bigint", nullable: true),
                    IntBusinessUnitId = table.Column<long>(type: "bigint", nullable: true),
                    StrRemarks = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: true),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IsCorporate = table.Column<bool>(type: "bit", nullable: true),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EmployeeDepartment", x => x.IntDepartmentId);
                });

            migrationBuilder.CreateTable(
                name: "EmployeeEmploymentStatus",
                columns: table => new
                {
                    IntEmploymentStatusId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrEmploymentStatus = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EmployeeEmploymentStatus", x => x.IntEmploymentStatusId);
                });

            migrationBuilder.CreateTable(
                name: "EmployeeEmploymentType",
                columns: table => new
                {
                    IntEmploymentTypeId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrEmploymentType = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntAccountId = table.Column<long>(type: "bigint", nullable: false),
                    IntBusinessUnitId = table.Column<long>(type: "bigint", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EmployeeEmploymentType", x => x.IntEmploymentTypeId);
                });

            migrationBuilder.CreateTable(
                name: "LineManager",
                columns: table => new
                {
                    LineManagerId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    LineManagerName = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LineManager", x => x.LineManagerId);
                });

            migrationBuilder.CreateTable(
                name: "PositionGroups",
                columns: table => new
                {
                    IntPositionGroupId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrPositionGroupCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrPositionGroupName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PositionGroups", x => x.IntPositionGroupId);
                });

            migrationBuilder.CreateTable(
                name: "Positions",
                columns: table => new
                {
                    IntPositionId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrPositionCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrPositionName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntPositionGroupId = table.Column<long>(type: "bigint", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Positions", x => x.IntPositionId);
                });

            migrationBuilder.CreateTable(
                name: "Supervisors",
                columns: table => new
                {
                    IntSupervisorLineManagerId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SupervisorName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LineManagerId = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Supervisors", x => x.IntSupervisorLineManagerId);
                });

            migrationBuilder.CreateTable(
                name: "tblBanks",
                columns: table => new
                {
                    IntBankId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrBankName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrBankShortName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrBankCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_tblBanks", x => x.IntBankId);
                });

            migrationBuilder.CreateTable(
                name: "tblEmployeeDesignations",
                columns: table => new
                {
                    IntDesignationId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrDesignationCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrDesignationName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntBusinessUnitId = table.Column<long>(type: "bigint", nullable: true),
                    DepartmentId = table.Column<long>(type: "bigint", nullable: true),
                    IntPosionId = table.Column<long>(type: "bigint", nullable: true),
                    SrtPositionName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IsManagement = table.Column<bool>(type: "bit", nullable: true),
                    StrRemarks = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: true),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_tblEmployeeDesignations", x => x.IntDesignationId);
                });

            migrationBuilder.CreateTable(
                name: "tblLevelOfEducations",
                columns: table => new
                {
                    IntLevelOfEducationId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrLevelOfEducation = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_tblLevelOfEducations", x => x.IntLevelOfEducationId);
                });

            migrationBuilder.CreateTable(
                name: "WorkplaceGroups",
                columns: table => new
                {
                    IntWorkplaceGroupId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrWorkplaceGroupName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrWorkplaceGroupCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkplaceGroups", x => x.IntWorkplaceGroupId);
                });

            migrationBuilder.CreateTable(
                name: "District",
                columns: table => new
                {
                    IntDistrictId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IntDivisionId = table.Column<long>(type: "bigint", nullable: false),
                    StrDistrictGeocode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrDistrictName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntCountryId = table.Column<long>(type: "bigint", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_District", x => x.IntDistrictId);
                    table.ForeignKey(
                        name: "FK_District_Country_IntCountryId",
                        column: x => x.IntCountryId,
                        principalTable: "Country",
                        principalColumn: "IntCountryId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_District_Division_IntDivisionId",
                        column: x => x.IntDivisionId,
                        principalTable: "Division",
                        principalColumn: "IntDivisionId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "EmployeeGrades",
                columns: table => new
                {
                    IntEmpGradeId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrEmpGradeCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrEmpGradeName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntSl = table.Column<long>(type: "bigint", nullable: false),
                    IntPositionId = table.Column<long>(type: "bigint", nullable: false),
                    IntPositionGroupId = table.Column<long>(type: "bigint", nullable: false),
                    IntAccountId = table.Column<long>(type: "bigint", nullable: false),
                    IntActionBy = table.Column<long>(type: "bigint", nullable: false),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: true),
                    StrEmpBaseGrade = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EmployeeGrades", x => x.IntEmpGradeId);
                    table.ForeignKey(
                        name: "FK_EmployeeGrades_Accounts_IntAccountId",
                        column: x => x.IntAccountId,
                        principalTable: "Accounts",
                        principalColumn: "IntAccountId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_EmployeeGrades_PositionGroups_IntPositionGroupId",
                        column: x => x.IntPositionGroupId,
                        principalTable: "PositionGroups",
                        principalColumn: "IntPositionGroupId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "tblBankBranches",
                columns: table => new
                {
                    IntBankBranchId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StrBankBranchCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrBankBranchName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StrBankBranchAddress = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntCountryId = table.Column<long>(type: "bigint", nullable: true),
                    IntBankId = table.Column<long>(type: "bigint", nullable: true),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StrRoutingNo = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: true),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IsActive = table.Column<bool>(type: "bit", nullable: true),
                    TblBankIntBankId = table.Column<long>(type: "bigint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_tblBankBranches", x => x.IntBankBranchId);
                    table.ForeignKey(
                        name: "FK_tblBankBranches_Country_IntCountryId",
                        column: x => x.IntCountryId,
                        principalTable: "Country",
                        principalColumn: "IntCountryId");
                    table.ForeignKey(
                        name: "FK_tblBankBranches_tblBanks_TblBankIntBankId",
                        column: x => x.TblBankIntBankId,
                        principalTable: "tblBanks",
                        principalColumn: "IntBankId");
                });

            migrationBuilder.CreateTable(
                name: "TblEmployeeBasicInfos",
                columns: table => new
                {
                    IntEmployeeId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    strEmployeeCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EmployeeFirstName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    MiddleName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LastName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EmployeeFullName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AccountId = table.Column<long>(type: "bigint", nullable: true),
                    BusinessunitId = table.Column<long>(type: "bigint", nullable: true),
                    DepartmentId = table.Column<long>(type: "bigint", nullable: true),
                    DesignationId = table.Column<long>(type: "bigint", nullable: true),
                    JoiningDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    PresentAddress = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PermanentAddress = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CountryId = table.Column<long>(type: "bigint", nullable: true),
                    ContactNumber = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AlternativeContactNumber = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Email = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DateOfBirth = table.Column<DateTime>(type: "datetime2", nullable: true),
                    FatherName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MotherName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BloodGroupId = table.Column<long>(type: "bigint", nullable: true),
                    SupervisorId = table.Column<long>(type: "bigint", nullable: true),
                    WorkplaceGroupId = table.Column<long>(type: "bigint", nullable: true),
                    PositionId = table.Column<long>(type: "bigint", nullable: true),
                    EmpGradeId = table.Column<long>(type: "bigint", nullable: true),
                    EmploymentTypeId = table.Column<long>(type: "bigint", nullable: true),
                    LineManagerId = table.Column<long>(type: "bigint", nullable: true),
                    LineManagerCode = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EmploymentStatusId = table.Column<long>(type: "bigint", nullable: true),
                    ActionBy = table.Column<long>(type: "bigint", nullable: true),
                    BasicSalary = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    GrossSalary = table.Column<decimal>(type: "decimal(18,2)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TblEmployeeBasicInfos", x => x.IntEmployeeId);
                    table.ForeignKey(
                        name: "FK_TblEmployeeBasicInfos_EmployeeEmploymentType_EmploymentTypeId",
                        column: x => x.EmploymentTypeId,
                        principalTable: "EmployeeEmploymentType",
                        principalColumn: "IntEmploymentTypeId");
                    table.ForeignKey(
                        name: "FK_TblEmployeeBasicInfos_EmployeeGrades_EmpGradeId",
                        column: x => x.EmpGradeId,
                        principalTable: "EmployeeGrades",
                        principalColumn: "IntEmpGradeId");
                    table.ForeignKey(
                        name: "FK_TblEmployeeBasicInfos_Positions_PositionId",
                        column: x => x.PositionId,
                        principalTable: "Positions",
                        principalColumn: "IntPositionId");
                    table.ForeignKey(
                        name: "FK_TblEmployeeBasicInfos_WorkplaceGroups_WorkplaceGroupId",
                        column: x => x.WorkplaceGroupId,
                        principalTable: "WorkplaceGroups",
                        principalColumn: "IntWorkplaceGroupId");
                });

            migrationBuilder.CreateTable(
                name: "EmployeBankInformation",
                columns: table => new
                {
                    IntEmployeeBankInfoId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IntEmployeeId = table.Column<long>(type: "bigint", nullable: false),
                    StrEmployeeCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntBankId = table.Column<long>(type: "bigint", nullable: true),
                    IntBankBranchId = table.Column<long>(type: "bigint", nullable: true),
                    AccountId = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntBusinessunitId = table.Column<long>(type: "bigint", nullable: false),
                    IntActionBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DteLastActionDateTime = table.Column<DateTime>(type: "datetime2", nullable: true),
                    DteServerDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: false),
                    StrDocumentPath = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StrSwiftCode = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntCountryId = table.Column<long>(type: "bigint", nullable: true),
                    StrDistrictName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IntDistrictId = table.Column<long>(type: "bigint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EmployeBankInformation", x => x.IntEmployeeBankInfoId);
                    table.ForeignKey(
                        name: "FK_EmployeBankInformation_Country_IntCountryId",
                        column: x => x.IntCountryId,
                        principalTable: "Country",
                        principalColumn: "IntCountryId");
                    table.ForeignKey(
                        name: "FK_EmployeBankInformation_TblEmployeeBasicInfos_IntEmployeeId",
                        column: x => x.IntEmployeeId,
                        principalTable: "TblEmployeeBasicInfos",
                        principalColumn: "IntEmployeeId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_District_IntCountryId",
                table: "District",
                column: "IntCountryId");

            migrationBuilder.CreateIndex(
                name: "IX_District_IntDivisionId",
                table: "District",
                column: "IntDivisionId");

            migrationBuilder.CreateIndex(
                name: "IX_EmployeBankInformation_IntCountryId",
                table: "EmployeBankInformation",
                column: "IntCountryId");

            migrationBuilder.CreateIndex(
                name: "IX_EmployeBankInformation_IntEmployeeId",
                table: "EmployeBankInformation",
                column: "IntEmployeeId");

            migrationBuilder.CreateIndex(
                name: "IX_EmployeeGrades_IntAccountId",
                table: "EmployeeGrades",
                column: "IntAccountId");

            migrationBuilder.CreateIndex(
                name: "IX_EmployeeGrades_IntPositionGroupId",
                table: "EmployeeGrades",
                column: "IntPositionGroupId");

            migrationBuilder.CreateIndex(
                name: "IX_tblBankBranches_IntCountryId",
                table: "tblBankBranches",
                column: "IntCountryId");

            migrationBuilder.CreateIndex(
                name: "IX_tblBankBranches_TblBankIntBankId",
                table: "tblBankBranches",
                column: "TblBankIntBankId");

            migrationBuilder.CreateIndex(
                name: "IX_TblEmployeeBasicInfos_EmpGradeId",
                table: "TblEmployeeBasicInfos",
                column: "EmpGradeId");

            migrationBuilder.CreateIndex(
                name: "IX_TblEmployeeBasicInfos_EmploymentTypeId",
                table: "TblEmployeeBasicInfos",
                column: "EmploymentTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_TblEmployeeBasicInfos_PositionId",
                table: "TblEmployeeBasicInfos",
                column: "PositionId");

            migrationBuilder.CreateIndex(
                name: "IX_TblEmployeeBasicInfos_WorkplaceGroupId",
                table: "TblEmployeeBasicInfos",
                column: "WorkplaceGroupId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "BloodGroup");

            migrationBuilder.DropTable(
                name: "BusinessUnit");

            migrationBuilder.DropTable(
                name: "District");

            migrationBuilder.DropTable(
                name: "EducationDegree");

            migrationBuilder.DropTable(
                name: "EmployeBankInformation");

            migrationBuilder.DropTable(
                name: "EmployeeBasiceInfo");

            migrationBuilder.DropTable(
                name: "EmployeeDepartment");

            migrationBuilder.DropTable(
                name: "EmployeeEmploymentStatus");

            migrationBuilder.DropTable(
                name: "LineManager");

            migrationBuilder.DropTable(
                name: "Supervisors");

            migrationBuilder.DropTable(
                name: "tblBankBranches");

            migrationBuilder.DropTable(
                name: "tblEmployeeDesignations");

            migrationBuilder.DropTable(
                name: "tblLevelOfEducations");

            migrationBuilder.DropTable(
                name: "Division");

            migrationBuilder.DropTable(
                name: "TblEmployeeBasicInfos");

            migrationBuilder.DropTable(
                name: "Country");

            migrationBuilder.DropTable(
                name: "tblBanks");

            migrationBuilder.DropTable(
                name: "EmployeeEmploymentType");

            migrationBuilder.DropTable(
                name: "EmployeeGrades");

            migrationBuilder.DropTable(
                name: "Positions");

            migrationBuilder.DropTable(
                name: "WorkplaceGroups");

            migrationBuilder.DropTable(
                name: "Accounts");

            migrationBuilder.DropTable(
                name: "PositionGroups");
        }
    }
}
