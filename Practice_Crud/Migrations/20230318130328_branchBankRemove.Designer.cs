// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practice_Crud.Models;

#nullable disable

namespace Practice_Crud.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230318130328_branchBankRemove")]
    partial class branchBankRemove
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Practice_Crud.Models.Account", b =>
                {
                    b.Property<long>("IntAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntAccountId"));

                    b.Property<DateTime?>("DteCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DteDateOfOnboard")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DteExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntMaxEmployee")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntMinEmployee")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntOwnerEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEmployeeCodeAutoGenerated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFree")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInternCloseMenual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLoan")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLoggedInWithOtp")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOvertimeAutoCalculated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProbationaryCloseMenual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProvidentFund")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTax")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NumFileStorageQuaota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NumPackageFileStorageQuaota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NumPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StrAccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrNid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrOwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntAccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Practice_Crud.Models.EmployeeBasiceInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeBasiceInfo");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblBank", b =>
                {
                    b.Property<long>("IntBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntBankId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrBankCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBankShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntBankId");

                    b.ToTable("tblBanks");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblBankBranch", b =>
                {
                    b.Property<long>("IntBankBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntBankBranchId"));

                    b.Property<DateTime?>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IntActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IntBankId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntCountryId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrBankBranchAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBankBranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBankBranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrRoutingNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TblBankIntBankId")
                        .HasColumnType("bigint");

                    b.HasKey("IntBankBranchId");

                    b.HasIndex("IntCountryId");

                    b.HasIndex("TblBankIntBankId");

                    b.ToTable("tblBankBranches");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblBloodGroup", b =>
                {
                    b.Property<long>("IntBloodGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntBloodGroupId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrBloodGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntBloodGroupId");

                    b.ToTable("BloodGroup");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblBusinessUnit", b =>
                {
                    b.Property<long>("IntBusinessUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntBusinessUnitId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DteRegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAttendanceDataProceed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVatExempted")
                        .HasColumnType("bit");

                    b.Property<string>("StrBusinessUnitAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBusinessUnitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBusinessUnitGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBusinessUnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMasking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrRegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntBusinessUnitId");

                    b.ToTable("BusinessUnit");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblCountry", b =>
                {
                    b.Property<long>("IntCountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntCountryId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrCountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrCountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDialingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntCountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblDistrict", b =>
                {
                    b.Property<long>("IntDistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntDistrictId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntCountryId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntDivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrDistrictGeocode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntDistrictId");

                    b.HasIndex("IntCountryId");

                    b.HasIndex("IntDivisionId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblDivision", b =>
                {
                    b.Property<long>("IntDivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntDivisionId"));

                    b.Property<long>("IntCountryId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrCountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDivision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDivisionGeocode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDivitionBanglaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntDivisionId");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEducationDegree", b =>
                {
                    b.Property<long>("IntEducationDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntEducationDegreeId"));

                    b.Property<long>("IntLevelOfEducationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrEducationDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrLevelOfEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntEducationDegreeId");

                    b.ToTable("EducationDegree");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmployeBankInformation", b =>
                {
                    b.Property<long>("IntEmployeeBankInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntEmployeeBankInfoId"));

                    b.Property<DateTime?>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntBankBranchId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntBankId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntBusinessunitId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrAccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBankBranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBankRoutingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrEmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrSwiftCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntEmployeeBankInfoId");

                    b.HasIndex("IntCountryId");

                    b.HasIndex("IntEmployeeId");

                    b.ToTable("EmployeBankInformation");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmployeeBasicInfo", b =>
                {
                    b.Property<long>("IntEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntEmployeeId"));

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ActionBy")
                        .HasColumnType("bigint");

                    b.Property<string>("AlternativeContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("BloodGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessunitId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmpGradeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmploymentStatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmploymentTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineManagerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LineManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PositionId")
                        .HasColumnType("bigint");

                    b.Property<string>("PresentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SupervisorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WorkplaceGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("strEmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntEmployeeId");

                    b.HasIndex("EmpGradeId");

                    b.HasIndex("EmploymentTypeId");

                    b.HasIndex("PositionId");

                    b.HasIndex("WorkplaceGroupId");

                    b.ToTable("TblEmployeeBasicInfos");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmployeeDepartment", b =>
                {
                    b.Property<long>("IntDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntDepartmentId"));

                    b.Property<DateTime?>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IntAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntBusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCorporate")
                        .HasColumnType("bit");

                    b.Property<string>("StrDepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntDepartmentId");

                    b.ToTable("EmployeeDepartment");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmployeeDesignation", b =>
                {
                    b.Property<long>("IntDesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntDesignationId"));

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntBusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IntPosionId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsManagement")
                        .HasColumnType("bit");

                    b.Property<string>("SrtPositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDesignationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDesignationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntDesignationId");

                    b.ToTable("tblEmployeeDesignations");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmployeeGrade", b =>
                {
                    b.Property<long>("IntEmpGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntEmpGradeId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntPositionGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntPositionId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntSl")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrEmpBaseGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrEmpGradeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrEmpGradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntEmpGradeId");

                    b.HasIndex("IntPositionId");

                    b.ToTable("EmployeeGrades");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmploymentStatus", b =>
                {
                    b.Property<long>("IntEmploymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntEmploymentStatusId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrEmploymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntEmploymentStatusId");

                    b.ToTable("EmployeeEmploymentStatus");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmploymentType", b =>
                {
                    b.Property<long>("IntEmploymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntEmploymentTypeId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntAccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntBusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrEmploymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntEmploymentTypeId");

                    b.ToTable("EmployeeEmploymentType");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblLevelOfEducation", b =>
                {
                    b.Property<long>("IntLevelOfEducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntLevelOfEducationId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrLevelOfEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntLevelOfEducationId");

                    b.ToTable("tblLevelOfEducations");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblLineManager", b =>
                {
                    b.Property<long>("LineManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LineManagerId"));

                    b.Property<string>("LineManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineManagerId");

                    b.ToTable("LineManager");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblPosition", b =>
                {
                    b.Property<long>("IntPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPositionId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntPositionGroupId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrPositionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrPositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntPositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblPositionGroup", b =>
                {
                    b.Property<long>("IntPositionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPositionGroupId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrPositionGroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrPositionGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntPositionGroupId");

                    b.ToTable("PositionGroups");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblSupervisor", b =>
                {
                    b.Property<long?>("IntSupervisorLineManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("IntSupervisorLineManagerId"));

                    b.Property<long>("LineManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("SupervisorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntSupervisorLineManagerId");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblWorkplaceGroup", b =>
                {
                    b.Property<long>("IntWorkplaceGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntWorkplaceGroupId"));

                    b.Property<DateTime>("DteLastActionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteServerDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("IntActionBy")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrWorkplaceGroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrWorkplaceGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntWorkplaceGroupId");

                    b.ToTable("WorkplaceGroups");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblBankBranch", b =>
                {
                    b.HasOne("Practice_Crud.Models.TblCountry", "Country")
                        .WithMany()
                        .HasForeignKey("IntCountryId");

                    b.HasOne("Practice_Crud.Models.TblBank", null)
                        .WithMany("TblBankBranches")
                        .HasForeignKey("TblBankIntBankId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblDistrict", b =>
                {
                    b.HasOne("Practice_Crud.Models.TblCountry", "Country")
                        .WithMany()
                        .HasForeignKey("IntCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practice_Crud.Models.TblDivision", "Division")
                        .WithMany()
                        .HasForeignKey("IntDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmployeBankInformation", b =>
                {
                    b.HasOne("Practice_Crud.Models.TblCountry", "Country")
                        .WithMany()
                        .HasForeignKey("IntCountryId");

                    b.HasOne("Practice_Crud.Models.TblEmployeeBasicInfo", "tblEmployeeBasicInfo")
                        .WithMany()
                        .HasForeignKey("IntEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("tblEmployeeBasicInfo");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmployeeBasicInfo", b =>
                {
                    b.HasOne("Practice_Crud.Models.TblEmployeeGrade", "TblEmployeeGrade")
                        .WithMany()
                        .HasForeignKey("EmpGradeId");

                    b.HasOne("Practice_Crud.Models.TblEmploymentType", "tblEmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId");

                    b.HasOne("Practice_Crud.Models.TblPosition", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("Practice_Crud.Models.TblWorkplaceGroup", "WorkplaceGroup")
                        .WithMany()
                        .HasForeignKey("WorkplaceGroupId");

                    b.Navigation("Position");

                    b.Navigation("TblEmployeeGrade");

                    b.Navigation("WorkplaceGroup");

                    b.Navigation("tblEmploymentType");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblEmployeeGrade", b =>
                {
                    b.HasOne("Practice_Crud.Models.TblPosition", "position")
                        .WithMany()
                        .HasForeignKey("IntPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("position");
                });

            modelBuilder.Entity("Practice_Crud.Models.TblBank", b =>
                {
                    b.Navigation("TblBankBranches");
                });
#pragma warning restore 612, 618
        }
    }
}
